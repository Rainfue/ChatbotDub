# --------------------------------------------------
# –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫
# —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è –∏–Ω–µ—Ä—Ñ–µ–π—Å–∞
import streamlit as st

# –æ–±—ä–µ–∫—Ç—ã —Å –º–æ–¥–µ–ª—è–º–∏:
# –æ–±—ä–µ–∫—Ç —Å text2imageAPI
from text2image import KandinskyAPI
# –æ–±—ä–µ–∫—Ç —Å GigaChatAPI
from text2text import GigachatAPI
# –æ–±—ä–µ–∫—Ç —Å –º–æ–¥–µ–ª—å—é –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
from mean_classifier import TextClassifier
# –æ–±—ä–µ–∫—Ç —Å —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –º–æ–¥–µ–ª—å—é
from backup import BackupAssistant

# –º–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
import base64
# –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–∏—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
from io import  BytesIO
# –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º
import time
from time import sleep

# --------------------------------------------------
# —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
class MyGUI:
    # –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞
    def __init__(self):
        # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç—ã –º–æ–¥–µ–ª–µ–π
        # –∫–ª–∞—Å—Å —Å text2image –º–æ–¥–µ–ª—å—é
        self.kandinsky = KandinskyAPI()
        # –∫–ª–∞—Å—Å —Å text2text –º–æ–¥–µ–ª—å—é
        self.gigachat = GigachatAPI()
        # –∫–ª–∞—Å—Å —Å –º–æ–¥–µ–ª—å—é –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
        self.classifier = TextClassifier()
        # —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –º–æ–¥–µ–ª—å
        self.backup = BackupAssistant()

        # –ø–æ–ª—É—á–∞–µ–º ID –º–æ–¥–µ–ª–∏ –¥–ª—è text2image
        # –µ—Å–ª–∏ API –¥–æ—Å—Ç—É–ø–Ω–∞
        if self.kandinsky.is_available():
            self.model_id = self.kandinsky.get_model_id()
        # –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        # –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞
        if 'messages' not in st.session_state:
            # —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
            st.session_state.messages = []
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –∫–ª–∞—Å—Å–∞
        self.history = st.session_state.messages

    # –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    @staticmethod
    def stream_data(text: str):
        '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞'''
        for word in text.split():
            yield word + ' '
            sleep(0.02)

    # –º–µ—Ç–æ–¥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
    @staticmethod
    def pil2base64(image):
        # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Å BytesIO
        buffer = BytesIO()
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±–∞–π—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        image.save(buffer, format='PNG')
        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64
        return base64.b64encode(buffer.getvalue()).decode('utf-8')

    # –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    def api_is_available(self) -> bool:
        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É GigaChat –∏ Kandinsky
        return (
            self.kandinsky.is_available() and       # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–¥–∏–Ω—Å–∫–æ–≥–æ
            self.gigachat.is_available()            # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–≥–∞—á–∞—Ç–∞
            )
    
    # –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    def add_message(self, 
                    role: str = 'user', 
                    content: str = None,
                    message_type: str = 'text',
                    label: str = 'text'):
        '''–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π'''
        # –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
        self.history.append({
            'role': role,               # —Ä–æ–ª—å
            'content': content,         # —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            'type': message_type,        # —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
            'label': label
        })

    # –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    def display_message(self, message: dict, new_message: bool = False):
        '''–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ'''
        # –ø–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        with st.chat_message(message['role']):
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
            if message['type'] =='text':
                # –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
                # –µ—Å–ª–∏ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
                if new_message:
                    st.write_stream(self.stream_data(message['content']))
                # –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º
                else:
                    st.markdown(message['content'])
                    
            # –µ—Å–ª–∏ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            elif message['type'] == 'image':
                # –ø—Ä–æ–±—É–µ–º –≤—ã–≤–µ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                try:
                    # –≤—ã–≤–æ–¥–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    st.image(base64.b64decode(message['content']),
                             width=400)
                # –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
                except Exception as e:
                    # –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
                    st.error(f'–û–®–ò–ë–ö–ê: {e}')
            # –∏–Ω–∞—á–µ
            else:
                # –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                st.warning(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: {message["type"]}')

    # –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
    def display_history(self):
        '''–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞'''
        # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –≤ –∏—Å—Ç–æ—Ä–∏–∏
        for message in self.history:
            # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.display_message(message)

    # –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    def get_context(self, prompt):
        # –ø–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context = [message['content'] for message in self.history if message['type'] == 'text' and message['label'] == 'text']
        # —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏
        context = '\n'.join(context)+f'\n\n{prompt}'

        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        return context
    
    # –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    def run(self):
        '''–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'''
        # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        clear_history = st.sidebar.button('üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é')
        # –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
        self.display_history()
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞
        if prompt := st.chat_input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏'):
            if not prompt.strip():
                st.warning("–ó–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
            else:
                # –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
                if self.api_is_available():
                    # –ø–æ–ª—É—á–∞–µ–º –º–µ—Ç–∫—É –ø—Ä–æ–º–ø—Ç–∞
                    print(f'prompt: {prompt}')
                    prompt_label = self.classifier.classify(prompt)
                    # –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
                    self.add_message(role='user', content=prompt, label=prompt_label)
                    # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏)
                    self.display_message(self.history[-1])

                    # –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–µ—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –Ω—É–∂–Ω—É—é –º–æ–¥–µ–ª—å
                    if prompt_label == 'image generation':
                        # —Å–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        with st.status("üñåÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...", expanded=True) as status:
                            # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                            start_time = time.time()
                            # –ø–æ–ª—É—á–∞–µ–º –∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä
                            generation_uuid = self.kandinsky.generate(prompt, self.model_id)
                            # –∂–¥–µ–º –ø–æ–∫–∞ –æ–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è
                            generation_check = self.kandinsky.check_generation(generation_uuid)
                            # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                            status.update(label="–ì–æ—Ç–æ–≤–æ!", state="complete")

                        # –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
                        if generation_check:
                            # –ø—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                            self.add_message(role='AI', 
                                            content=generation_check, 
                                            message_type='image')
                            # –≤—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç
                            self.display_message(self.history[-1])
                            # –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                            st.markdown(f'–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {(time.time() - start_time):.2f}s')

                    # –µ—Å–ª–∏ –º–µ—Ç–∫–∞ text answer
                    elif prompt_label == 'text':
                        # –ø–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —á–∞—Ç–∞
                        context = self.get_context(prompt)
                        # –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
                        response = self.gigachat.generate(context)
                        # –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
                        self.add_message(role='AI', content=response)
                        # –≤—ã–≤–æ–¥–∏–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
                        self.display_message(self.history[-1], new_message=True)

                # –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
                else:
                    # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                    st.error('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
                    st.markdown(
                        self.backup.generate_response(prompt)
                        )




        # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—á–∏—Å—Ç–∏–ª –∏—Å—Ç–æ—Ä–∏—é
        if clear_history:
            # –æ—á–∏—â–∞–µ–º session_state
            st.session_state.messages = []
            # —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º
            self.history = st.session_state.messages
            # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            st.rerun()


if __name__ == '__main__':
    mygui = MyGUI()
    mygui.run()